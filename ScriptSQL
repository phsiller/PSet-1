CREATE TABLE funcionarios (
                cpf CHAR(11) NOT NULL,
                primeiro_nome VARCHAR (15) NOT NULL,
                nome_meio CHAR(1),
                ultimo_nome VARCHAR (15) NOT NULL,
                data_nascimento DATE,
                endereco VARCHAR (70),
                sexo CHAR (1),
                salario DECIMAL (10,2),
                cpf_supervisor CHAR(11),
                numero_departamento INT NOT NULL,
                PRIMARY KEY (cpf)
);
COMMENT ON TABLE funcionarios IS 'Tabela que contém os dados dos funcionários';
COMMENT ON COLUMN funcionários.cpf IS 'CPF do funcionário';
COMMENT ON COLUMN funcionários.primeiro_nome IS 'Primeiro nome do funcionário';
COMMENT ON COLUMN funcionários.nome_meio IS 'Nome do meio do funcionário';
COMMENT ON COLUMN funcionários.ultimo_nome IS 'Último nome do funcionário';
COMMENT ON COLUMN funcionários.data_nascimento IS 'Data de nascimento do funcionário';
COMMENT ON COLUMN funcionários.endereco IS 'Local em que o funcionário reside';
COMMENT ON COLUMN funcionários.sexo IS 'Qual a identidade do sexual do funcionário';
COMMENT ON COLUMN funcionários.salario IS '0 salário do funcionário';
COMMENT ON COLUMN funcionários.cpf_supervisor IS 'CPF do supervisor desse funcionário';
COMMENT ON COLUMN funcionários.numero_departamento IS 'Número do departamento em que o funcionário trabalha';


CREATE TABLE departamento (
                numero_departamento INT NOT NULL,
                nome_departamento VARCHAR (15) NOT NULL,
                cpf_gerente CHAR (11) NOT NULL,
                data_inicio gerente DATE,
                PRIMARY KEY (numero_departamento),
                UNIQUE (cpf_gerente),
                UNIQUE (nome_departamento)
);
COMMENT ON TABLE departamento IS 'Tabela que contém informações sobre os departamentos';
COMMENT ON COLUMN departamento.numero_departamento IS 'Número do departamento';
COMMENT ON COLUMN departamento.nome_departamento IS 'Nome do departamento';
COMMENT ON COLUMN departamento.cpf_gerente IS 'CPF do funcionário que é gerente';
COMMENT ON COLUMN departamento.data_inicio_gerente IS 'Data em que o gerente começou a trabalhar no departamento';


CREATE TABLE localizacoes_departamento (
                numero_departamento INT NOT NULL,
                local VARCHAR(45) NOT NULL,
                PRIMARY KEY (numero_departamento, local)
);
COMMENT ON TABLE localizacoes_departamento IS 'Tabela que contém os dados das localizações dos departamentos';
COMMENT ON COLUMN localizacoes_departamento.numero_departamento IS 'Número do departamento';
COMMENT ON COLUMN localizacoes_departamento.local IS 'Onde o departamento está fisicamente';


CREATE TABLE projeto (
                numero_projeto INT NOT NULL,
                nome_projeto VARCHAR (15) NOT NULL,
                local_projeto VARCHAR(45),
                numero_departamento INT NOT NULL,
                PRIMARY KEY (numero_projeto)
);
COMMENT ON TABLE projeto IS 'Tabela que contém informações sobre os projetos';
COMMENT ON COLUMN projeto.numero_projeto IS 'Número do projeto';
COMMENT ON COLUMN projeto.nome_projeto IS 'Nome do projeto';
COMMENT ON COLUMN projeto.local_projeto IS 'Local em que o projeto se localiza fisicamente';
COMMENT ON COLUMN projeto.numero_departamento IS 'Número do departamento em que o projeto fica';


CREATE TABLE trabalha_em (
                cpf_funcionario CHAR(11) NOT NULL,
                numero_projeto INT NOT NULL,
                horas DECIMAL(3,1) NOT NULL,
                PRIMARY KEY (cpf_funcionario, numero_projeto)
);
COMMENT ON TABLE trabalha_em IS 'Tabela contendo informações sobre o funcionário e o projeto em que trabalha'
COMMENT ON COLUMN trabalha_em.cpf_funcionario IS 'CPF do funcionário';
COMMENT ON COLUMN trabalha_em.numero_projeto IS 'Nome do projeto em que o funcionário trabalha';
COMMENT ON COLUMN trabalha_em.horas IS 'Carga horária de trabalho do funcionário';


CREATE TABLE dependente (
                cpf_funcionario CHAR(11) NOT NULL,
                nome_dependente VARCHAR(15) NOT NULL,
                sexo CHAR (1),
                data_nascimento DATE,
                parentesco VARCHAR (15),
                PRIMARY KEY (cpf_funcionario, nome_dependente)
);
COMMENT ON TABLE dependente IS 'Tabela que contém informações sobre os dependentes dos funcionários';
COMMENT ON COLUMN dependente.cpf_funcionario IS 'CPF do funcionário que trabalha na empresa';
COMMENT ON COLUMN dependente.nome_dependente IS 'Nome do dependente do funcionário';
COMMENT ON COLUMN dependente.sexo IS 'Qual a identidade do sexual do dependente';
COMMENT ON COLUMN dependente.data_nascimento IS 'Data de nascimento do dependente';
COMMENT ON COLUMN dependente.parentesco IS 'Tipo de parentesco entre o funcionário e o dependente';


ALTER TABLE funcionarios ADD CONSTRAINT funcionarios_funcionarios_fk
FOREIGN KEY (cpf_supervisor)
REFERENCES funcionarios (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE dependente ADD CONSTRAINT funcionarios_dependente_fk
FOREIGN KEY (cpf_funcionario)
REFERENCES funcionarios (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE departamento ADD CONSTRAINT funcionarios_departamento_fk
FOREIGN KEY (cpf_gerente)
REFERENCES funcionarios (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE trabalha_em ADD CONSTRAINT funcionarios_trabalha_em_fk
FOREIGN KEY (cpf_funcionario)
REFERENCES funcionarios (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE projeto ADD CONSTRAINT departamento_projeto_fk
FOREIGN KEY (numero_departamento)
REFERENCES departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE localizacoes_departamento ADD CONSTRAINT departamento_localizacoes_departamento_fk
FOREIGN KEY (numero_departamento)
REFERENCES departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE trabalha_em ADD CONSTRAINT projeto_trabalha_em_fk
FOREIGN KEY (numero_projeto)
REFERENCES projeto (numero_projeto)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE funcionarios ADD CONSTRAINT C_sexo_funcionario
CHECK (sexo='M' or sexo='F' or sexo='m' or sexo='f');
ALTER TABLE dependente ADD CONSTRAINT C_sexo_dependente
CHECK (sexo='M' or sexo='F' or sexo='m' or sexo='f');



